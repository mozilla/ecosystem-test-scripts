[common]
test_result_dir = raw_data
test_metadata_dir = circle_ci
junit_artifact_dir = junit
coverage_artifact_dir = coverage

[circleci_scraper]
;create a personal Circle CI token: https://circleci.com/docs/managing-api-tokens/
token =
base_url = https://circleci.com/api/v2
vcs_slug = gh
pipelines = [
      {
        "organization": "mozilla",
        "repository": "fxa",
        "workflows": {
          "nightly": [
            "Unit Test (nightly)",
            "Integration Test - Frontends (nightly)",
            "Integration Test - Libraries (nightly)",
            "Integration Test - Servers (nightly)",
            "Integration Test - Servers - Auth (nightly)",
            "Integration Test - Servers - Auth V2 (nightly)",
            "Chromium Functional Tests - Playwright (nightly)",
            "Firefox Functional Tests - Playwright (nightly)"
          ],
          "stage_smoke_tests": [
            "Smoke Test Stage - Playwright"
          ],
          "production_smoke_tests": [
            "Smoke Test Production - Playwright"
          ]
        }
      },
      {
        "organization": "mozilla-services",
        "repository": "autopush-rs",
        "branches": ["master"],
        "workflows": {
          "build-test-deploy": [
            "Rust Unit Tests",
            "Integration Tests"
          ]
        }
      },
      {
        "organization": "mozilla-services",
        "repository": "merino-py",
        "workflows": {
          "main-workflow": [
            "unit-tests",
            "integration-tests"
          ]
        }
      }
    ]
;(optional) Get data starting from x days past from now (default: all available data)
days_of_data = 2

[google_sheet_uploader]
reports_dir = reports
service_account_file = google_sheets_key.json
mappings = [];

[metric_reporter]
reports_dir = reports
gcp_project_id = ecosystem-test-eng
bigquery_dataset_name = test_metrics
bigquery_service_account_file = metric_reporter_key.json
output_csv = False
update_bigquery = True

[report_merger]
reports_dir = reports
merged_reports_dir = merged_reports
mappings = {
        "autopushrs_averages": [
            "autopushrs_integration_tests_averages.csv",
            "autopushrs_rust_unit_tests_averages.csv"
        ],
        "autopushrs_results": [
            "autopushrs_integration_tests_results.csv",
            "autopushrs_rust_unit_tests_results.csv"
        ],
        "autopushrs_coverage": [
            "autopushrs_rust_unit_tests_coverage.csv"
        ],
       "fxa_averages": [
            "fxa_chromium_functional_tests_playwright_nightly_averages.csv",
            "fxa_firefox_functional_tests_playwright_nightly_averages.csv",
            "fxa_integration_test_frontends_nightly_averages.csv",
            "fxa_integration_test_libraries_nightly_averages.csv",
            "fxa_integration_test_servers_auth_nightly_averages.csv",
            "fxa_integration_test_servers_auth_v2_nightly_averages.csv",
            "fxa_integration_test_servers_nightly_averages.csv",
            "fxa_smoke_test_production_playwright_averages.csv",
            "fxa_smoke_test_stage_playwright_averages.csv",
            "fxa_unit_test_nightly_averages.csv"
        ],
        "fxa_results": [
            "fxa_chromium_functional_tests_playwright_nightly_results.csv",
            "fxa_firefox_functional_tests_playwright_nightly_results.csv",
            "fxa_integration_test_frontends_nightly_results.csv",
            "fxa_integration_test_libraries_nightly_results.csv",
            "fxa_integration_test_servers_auth_nightly_results.csv",
            "fxa_integration_test_servers_auth_v2_nightly_results.csv",
            "fxa_integration_test_servers_nightly_results.csv",
            "fxa_smoke_test_production_playwright_results.csv",
            "fxa_smoke_test_stage_playwright_results.csv",
            "fxa_unit_test_nightly_results.csv"
        ],
       "merinopy_averages": [
            "merinopy_integration_tests_averages.csv",
            "merinopy_unit_tests_averages.csv"
        ],
        "merinopy_results": [
            "merinopy_integration_tests_results.csv",
            "merinopy_unit_tests_results.csv"
        ],
        "merinopy_coverage": [
            "merinopy_integration_tests_coverage.csv",
            "merinopy_unit_tests_coverage.csv"
        ]
    }
;
